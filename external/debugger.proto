syntax = "proto3";

import "external/debugger_structs.proto";

// Has no request payload
message DbgGetProcessListResponse {
    repeated DbgProcessLimited processes = 1;
}

message DbgReadProcessMemoryRequest {
    uint64 address = 1;
    uint32 size = 2;
}

message DbgReadProcessMemoryResponse {
    bytes data = 1;
}

message DbgWriteProcessMemoryRequest {
    uint64 address = 1;
    bytes data = 2; // Size is inside here
} // Bytes are returned in error, no response payload

message DbgProtectProcessMemoryRequest {
    uint64 address = 1;
    uint64 length = 2;
    int32 protection = 3;
} // No response payload

message DbgScanProcessMemoryRequest {
    // TODO: Come back to this
}

message DbgGetProcessInfoRequest {
    int32 processId = 1;
}// Response payload = DbgProcessFull

message DbgAllocateProcessMemoryRequest {
    uint32 size = 1;
}

message DbgAllocateProcessMemoryResponse {
    uint64 address = 1;
    uint32 size = 2;
}

message DbgFreeProcessMemoryRequest {
    uint64 address = 1;
    uint32 size = 2;
}

message DbgGetProcessMapsRequest {
    int32 processId = 1;
} // Response Message = DbgProcessLimited

message DbgAttachRequest {
    int32 processId = 1;
} // No response payload, pid in error

message DbgDetachRequest {
    bool force = 1;
} // No response payload

enum DbgBreakpointType {
    BP_NONE = 0;
    BP_SOFTWARE = 1;
    BP_HARDWARE = 2;
}

message DbgBreakpointRequest {
    bool enabled = 1;
    uint64 address = 2;
    uint32 original = 3;
    DbgBreakpointType breakpointType = 4;
}

message DbgBreakpointResponse {
    uint64 breakpointHandle = 1;
}

message DbgWatchpointRequest {
    bool enabled = 1;
    uint64 address = 2;
    uint32 breakpointType = 3;
    uint32 length = 4;
}

message DbgWatchpointResponse {
    uint64 watchpointHandle = 1;
}

message DbgGetProcessThreadsRequest {
    int32 processId = 1;
}

message DbgGetProcessThreadsResponse {
    repeated DbgThreadLimited threads = 1;
}

message DbgSignalProcessRequest {
    int32 signal = 1;
} // No response message

message DbgGetRegistersRequest {
    int32 threadId = 1;
}

message DbgGetRegistersResponse {
    DbgGpRegisters gpRegisters = 1;
    DbgFpRegisters fpRegisters = 2;
    DbgDbRegisters dbRegisters = 3;
}

message DbgSetRegistersRequest {
    int32 threadId = 1;
    DbgGpRegisters gpRegisters = 2;
    DbgFpRegisters fpRegisters = 3;
    DbgDbRegisters dbRegisters = 4;
} // No Response message payload

message DbgGetThreadInfoRequest {
    int32 threadId = 1;
}

message DbgGetKernelInfoResponse {
    uint64 version = 1;
    bytes gloablConfigData = 2; // len 140?
}

message DbgReadKernelMemoryRequest {
    uint64 address = 1;
    uint64 size = 2;
}

message DbgReadKernelMemoryResponse {
    bytes data = 1;
}

message DbgWriteKernelMemoryRequest {
    uint64 address = 1;
    bytes data = 2;
}

message DbgCommandRequest {
    enum DbgCommands {
        DBG_NONE = 0;
        DBG_REBOOT = 1;
        DBG_SHUTDOWN = 2;
        DBG_PRINT = 3;
        DBG_NOTIFY = 4;
        DBG_INFO = 5;
    }
    DbgCommands command = 1;
}
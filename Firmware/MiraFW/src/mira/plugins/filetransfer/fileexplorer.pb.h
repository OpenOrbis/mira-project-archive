/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Tue Oct 23 12:18:24 2018. */

#ifndef PB_FILEEXPLORER_PB_H_INCLUDED
#define PB_FILEEXPLORER_PB_H_INCLUDED
#include <pb.h>

#include "mirabuiltin.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _DirEnt_DirectoryType {
    DirEnt_DirectoryType_DT_UNKNOWN = 0,
    DirEnt_DirectoryType_DT_FIFO = 1,
    DirEnt_DirectoryType_DT_CHR = 2,
    DirEnt_DirectoryType_DT_DIR = 4,
    DirEnt_DirectoryType_DT_BLK = 6,
    DirEnt_DirectoryType_DT_REG = 8,
    DirEnt_DirectoryType_DT_LNK = 10,
    DirEnt_DirectoryType_DT_SOCK = 12,
    DirEnt_DirectoryType_DT_WHT = 14
} DirEnt_DirectoryType;
#define _DirEnt_DirectoryType_MIN DirEnt_DirectoryType_DT_UNKNOWN
#define _DirEnt_DirectoryType_MAX DirEnt_DirectoryType_DT_WHT
#define _DirEnt_DirectoryType_ARRAYSIZE ((DirEnt_DirectoryType)(DirEnt_DirectoryType_DT_WHT+1))

/* Struct definitions */
typedef struct _CloseRequest {
    MessageHeader header;
    int32_t handle;
/* @@protoc_insertion_point(struct:CloseRequest) */
} CloseRequest;

typedef struct _CloseResponse {
    MessageHeader header;
/* @@protoc_insertion_point(struct:CloseResponse) */
} CloseResponse;

typedef struct _DirEnt {
    uint32_t fileno;
    uint32_t reclen;
    DirEnt_DirectoryType type;
    char name[256];
/* @@protoc_insertion_point(struct:DirEnt) */
} DirEnt;

typedef struct _GetDentsRequest {
    MessageHeader header;
    char path[256];
/* @@protoc_insertion_point(struct:GetDentsRequest) */
} GetDentsRequest;

typedef struct _MakeDirectoryRequest {
    MessageHeader header;
    char path[256];
    int32_t mode;
/* @@protoc_insertion_point(struct:MakeDirectoryRequest) */
} MakeDirectoryRequest;

typedef struct _MakeDirectoryResponse {
    MessageHeader header;
/* @@protoc_insertion_point(struct:MakeDirectoryResponse) */
} MakeDirectoryResponse;

typedef struct _OpenRequest {
    MessageHeader header;
    char path[256];
    int32_t flags;
    int32_t mode;
/* @@protoc_insertion_point(struct:OpenRequest) */
} OpenRequest;

typedef struct _OpenResponse {
    MessageHeader header;
    bool has_handle;
    int32_t handle;
/* @@protoc_insertion_point(struct:OpenResponse) */
} OpenResponse;

typedef struct _ReadFileRequest {
    MessageHeader header;
    char path[256];
/* @@protoc_insertion_point(struct:ReadFileRequest) */
} ReadFileRequest;

typedef PB_BYTES_ARRAY_T(16384) ReadFileResponse_data_t;
typedef struct _ReadFileResponse {
    MessageHeader header;
    bool has_offset;
    uint64_t offset;
    bool has_data;
    ReadFileResponse_data_t data;
/* @@protoc_insertion_point(struct:ReadFileResponse) */
} ReadFileResponse;

typedef struct _ReadRequest {
    MessageHeader header;
    int32_t handle;
    int64_t offset;
    uint64_t size;
/* @@protoc_insertion_point(struct:ReadRequest) */
} ReadRequest;

typedef PB_BYTES_ARRAY_T(16384) ReadResponse_data_t;
typedef struct _ReadResponse {
    MessageHeader header;
    bool has_data;
    ReadResponse_data_t data;
/* @@protoc_insertion_point(struct:ReadResponse) */
} ReadResponse;

typedef struct _RemoveDirectoryRequest {
    MessageHeader header;
    char path[256];
/* @@protoc_insertion_point(struct:RemoveDirectoryRequest) */
} RemoveDirectoryRequest;

typedef struct _RemoveDirectoryResponse {
    MessageHeader header;
/* @@protoc_insertion_point(struct:RemoveDirectoryResponse) */
} RemoveDirectoryResponse;

typedef struct _StatRequest {
    MessageHeader header;
    char path[256];
/* @@protoc_insertion_point(struct:StatRequest) */
} StatRequest;

typedef struct _TimeSpec {
    int64_t sec;
    uint64_t nsec;
/* @@protoc_insertion_point(struct:TimeSpec) */
} TimeSpec;

typedef struct _UnlinkRequest {
    MessageHeader header;
    char path[256];
/* @@protoc_insertion_point(struct:UnlinkRequest) */
} UnlinkRequest;

typedef struct _UnlinkResponse {
    MessageHeader header;
/* @@protoc_insertion_point(struct:UnlinkResponse) */
} UnlinkResponse;

typedef struct _GetDentsResponse {
    MessageHeader header;
    bool has_entriesLeft;
    uint64_t entriesLeft;
    pb_size_t entries_count;
    DirEnt entries[32];
/* @@protoc_insertion_point(struct:GetDentsResponse) */
} GetDentsResponse;

typedef struct _StatResponse {
    MessageHeader header;
    bool has_path;
    char path[256];
    bool has_dev;
    uint32_t dev;
    bool has_ino;
    uint32_t ino;
    bool has_mode;
    uint32_t mode;
    bool has_nlink;
    uint32_t nlink;
    bool has_uid;
    uint32_t uid;
    bool has_gid;
    uint32_t gid;
    bool has_rdev;
    uint32_t rdev;
    bool has_atim;
    TimeSpec atim;
    bool has_mtim;
    TimeSpec mtim;
    bool has_ctim;
    TimeSpec ctim;
    bool has_size;
    int64_t size;
    bool has_blocks;
    int64_t blocks;
    bool has_blksize;
    uint32_t blksize;
    bool has_flags;
    uint32_t flags;
    bool has_gen;
    uint32_t gen;
    bool has_lspare;
    int32_t lspare;
    bool has_birthtim;
    TimeSpec birthtim;
/* @@protoc_insertion_point(struct:StatResponse) */
} StatResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DirEnt_init_default                      {0, 0, _DirEnt_DirectoryType_MIN, ""}
#define OpenRequest_init_default                 {MessageHeader_init_default, "", 0, 0}
#define OpenResponse_init_default                {MessageHeader_init_default, false, 0}
#define CloseRequest_init_default                {MessageHeader_init_default, 0}
#define CloseResponse_init_default               {MessageHeader_init_default}
#define ReadRequest_init_default                 {MessageHeader_init_default, 0, 0, 0}
#define ReadResponse_init_default                {MessageHeader_init_default, false, {0, {0}}}
#define ReadFileRequest_init_default             {MessageHeader_init_default, ""}
#define ReadFileResponse_init_default            {MessageHeader_init_default, false, 0, false, {0, {0}}}
#define MakeDirectoryRequest_init_default        {MessageHeader_init_default, "", 0}
#define MakeDirectoryResponse_init_default       {MessageHeader_init_default}
#define RemoveDirectoryRequest_init_default      {MessageHeader_init_default, ""}
#define RemoveDirectoryResponse_init_default     {MessageHeader_init_default}
#define UnlinkRequest_init_default               {MessageHeader_init_default, ""}
#define UnlinkResponse_init_default              {MessageHeader_init_default}
#define TimeSpec_init_default                    {0, 0}
#define StatRequest_init_default                 {MessageHeader_init_default, ""}
#define StatResponse_init_default                {MessageHeader_init_default, false, "", false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, TimeSpec_init_default, false, TimeSpec_init_default, false, TimeSpec_init_default, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, TimeSpec_init_default}
#define GetDentsRequest_init_default             {MessageHeader_init_default, ""}
#define GetDentsResponse_init_default            {MessageHeader_init_default, false, 0, 0, {DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default, DirEnt_init_default}}
#define DirEnt_init_zero                         {0, 0, _DirEnt_DirectoryType_MIN, ""}
#define OpenRequest_init_zero                    {MessageHeader_init_zero, "", 0, 0}
#define OpenResponse_init_zero                   {MessageHeader_init_zero, false, 0}
#define CloseRequest_init_zero                   {MessageHeader_init_zero, 0}
#define CloseResponse_init_zero                  {MessageHeader_init_zero}
#define ReadRequest_init_zero                    {MessageHeader_init_zero, 0, 0, 0}
#define ReadResponse_init_zero                   {MessageHeader_init_zero, false, {0, {0}}}
#define ReadFileRequest_init_zero                {MessageHeader_init_zero, ""}
#define ReadFileResponse_init_zero               {MessageHeader_init_zero, false, 0, false, {0, {0}}}
#define MakeDirectoryRequest_init_zero           {MessageHeader_init_zero, "", 0}
#define MakeDirectoryResponse_init_zero          {MessageHeader_init_zero}
#define RemoveDirectoryRequest_init_zero         {MessageHeader_init_zero, ""}
#define RemoveDirectoryResponse_init_zero        {MessageHeader_init_zero}
#define UnlinkRequest_init_zero                  {MessageHeader_init_zero, ""}
#define UnlinkResponse_init_zero                 {MessageHeader_init_zero}
#define TimeSpec_init_zero                       {0, 0}
#define StatRequest_init_zero                    {MessageHeader_init_zero, ""}
#define StatResponse_init_zero                   {MessageHeader_init_zero, false, "", false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, TimeSpec_init_zero, false, TimeSpec_init_zero, false, TimeSpec_init_zero, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, TimeSpec_init_zero}
#define GetDentsRequest_init_zero                {MessageHeader_init_zero, ""}
#define GetDentsResponse_init_zero               {MessageHeader_init_zero, false, 0, 0, {DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero, DirEnt_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define CloseRequest_header_tag                  1
#define CloseRequest_handle_tag                  2
#define CloseResponse_header_tag                 1
#define DirEnt_fileno_tag                        1
#define DirEnt_reclen_tag                        2
#define DirEnt_type_tag                          3
#define DirEnt_name_tag                          4
#define GetDentsRequest_header_tag               1
#define GetDentsRequest_path_tag                 2
#define MakeDirectoryRequest_header_tag          1
#define MakeDirectoryRequest_path_tag            2
#define MakeDirectoryRequest_mode_tag            3
#define MakeDirectoryResponse_header_tag         1
#define OpenRequest_header_tag                   1
#define OpenRequest_path_tag                     2
#define OpenRequest_flags_tag                    3
#define OpenRequest_mode_tag                     4
#define OpenResponse_header_tag                  1
#define OpenResponse_handle_tag                  2
#define ReadFileRequest_header_tag               1
#define ReadFileRequest_path_tag                 2
#define ReadFileResponse_header_tag              1
#define ReadFileResponse_offset_tag              2
#define ReadFileResponse_data_tag                3
#define ReadRequest_header_tag                   1
#define ReadRequest_handle_tag                   2
#define ReadRequest_offset_tag                   3
#define ReadRequest_size_tag                     4
#define ReadResponse_header_tag                  1
#define ReadResponse_data_tag                    2
#define RemoveDirectoryRequest_header_tag        1
#define RemoveDirectoryRequest_path_tag          2
#define RemoveDirectoryResponse_header_tag       1
#define StatRequest_header_tag                   1
#define StatRequest_path_tag                     2
#define TimeSpec_sec_tag                         1
#define TimeSpec_nsec_tag                        2
#define UnlinkRequest_header_tag                 1
#define UnlinkRequest_path_tag                   2
#define UnlinkResponse_header_tag                1
#define GetDentsResponse_header_tag              1
#define GetDentsResponse_entriesLeft_tag         2
#define GetDentsResponse_entries_tag             3
#define StatResponse_header_tag                  1
#define StatResponse_path_tag                    2
#define StatResponse_dev_tag                     3
#define StatResponse_ino_tag                     4
#define StatResponse_mode_tag                    5
#define StatResponse_nlink_tag                   6
#define StatResponse_uid_tag                     7
#define StatResponse_gid_tag                     8
#define StatResponse_rdev_tag                    9
#define StatResponse_atim_tag                    10
#define StatResponse_mtim_tag                    11
#define StatResponse_ctim_tag                    12
#define StatResponse_size_tag                    13
#define StatResponse_blocks_tag                  14
#define StatResponse_blksize_tag                 15
#define StatResponse_flags_tag                   16
#define StatResponse_gen_tag                     17
#define StatResponse_lspare_tag                  18
#define StatResponse_birthtim_tag                19

/* Struct field encoding specification for nanopb */
extern const pb_field_t DirEnt_fields[5];
extern const pb_field_t OpenRequest_fields[5];
extern const pb_field_t OpenResponse_fields[3];
extern const pb_field_t CloseRequest_fields[3];
extern const pb_field_t CloseResponse_fields[2];
extern const pb_field_t ReadRequest_fields[5];
extern const pb_field_t ReadResponse_fields[3];
extern const pb_field_t ReadFileRequest_fields[3];
extern const pb_field_t ReadFileResponse_fields[4];
extern const pb_field_t MakeDirectoryRequest_fields[4];
extern const pb_field_t MakeDirectoryResponse_fields[2];
extern const pb_field_t RemoveDirectoryRequest_fields[3];
extern const pb_field_t RemoveDirectoryResponse_fields[2];
extern const pb_field_t UnlinkRequest_fields[3];
extern const pb_field_t UnlinkResponse_fields[2];
extern const pb_field_t TimeSpec_fields[3];
extern const pb_field_t StatRequest_fields[3];
extern const pb_field_t StatResponse_fields[20];
extern const pb_field_t GetDentsRequest_fields[3];
extern const pb_field_t GetDentsResponse_fields[4];

/* Maximum encoded size of messages (where known) */
#define DirEnt_size                              273
#define OpenRequest_size                         (287 + MessageHeader_size)
#define OpenResponse_size                        (17 + MessageHeader_size)
#define CloseRequest_size                        (17 + MessageHeader_size)
#define CloseResponse_size                       (6 + MessageHeader_size)
#define ReadRequest_size                         (39 + MessageHeader_size)
#define ReadResponse_size                        (16394 + MessageHeader_size)
#define ReadFileRequest_size                     (265 + MessageHeader_size)
#define ReadFileResponse_size                    (16405 + MessageHeader_size)
#define MakeDirectoryRequest_size                (276 + MessageHeader_size)
#define MakeDirectoryResponse_size               (6 + MessageHeader_size)
#define RemoveDirectoryRequest_size              (265 + MessageHeader_size)
#define RemoveDirectoryResponse_size             (6 + MessageHeader_size)
#define UnlinkRequest_size                       (265 + MessageHeader_size)
#define UnlinkResponse_size                      (6 + MessageHeader_size)
#define TimeSpec_size                            22
#define StatRequest_size                         (265 + MessageHeader_size)
#define StatResponse_size                        (458 + MessageHeader_size)
#define GetDentsRequest_size                     (265 + MessageHeader_size)
#define GetDentsResponse_size                    (8849 + MessageHeader_size)

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FILEEXPLORER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

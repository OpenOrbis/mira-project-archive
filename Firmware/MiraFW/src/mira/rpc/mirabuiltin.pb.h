/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Sun Sep 30 11:48:00 2018. */

#ifndef PB_MIRABUILTIN_PB_H_INCLUDED
#define PB_MIRABUILTIN_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _MessageCategory {
    MessageCategory_NONE = 0,
    MessageCategory_SYSTEM = 1,
    MessageCategory_LOG = 2,
    MessageCategory_DEBUG = 3,
    MessageCategory_FILE = 4,
    MessageCategory_CMD = 5
} MessageCategory;
#define _MessageCategory_MIN MessageCategory_NONE
#define _MessageCategory_MAX MessageCategory_CMD
#define _MessageCategory_ARRAYSIZE ((MessageCategory)(MessageCategory_CMD+1))

/* Struct definitions */
typedef struct _MessageHeader {
    MessageCategory category;
    uint32_t type;
    int32_t error;
/* @@protoc_insertion_point(struct:MessageHeader) */
} MessageHeader;

typedef struct _GetHddKeysRequest {
    MessageHeader header;
/* @@protoc_insertion_point(struct:GetHddKeysRequest) */
} GetHddKeysRequest;

typedef PB_BYTES_ARRAY_T(96) GetHddKeysResponse_encrypted_t;
typedef PB_BYTES_ARRAY_T(32) GetHddKeysResponse_key_t;
typedef struct _GetHddKeysResponse {
    MessageHeader header;
    bool has_encrypted;
    GetHddKeysResponse_encrypted_t encrypted;
    bool has_key;
    GetHddKeysResponse_key_t key;
/* @@protoc_insertion_point(struct:GetHddKeysResponse) */
} GetHddKeysResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define MessageHeader_init_default               {_MessageCategory_MIN, 0, 0}
#define GetHddKeysRequest_init_default           {MessageHeader_init_default}
#define GetHddKeysResponse_init_default          {MessageHeader_init_default, false, {0, {0}}, false, {0, {0}}}
#define MessageHeader_init_zero                  {_MessageCategory_MIN, 0, 0}
#define GetHddKeysRequest_init_zero              {MessageHeader_init_zero}
#define GetHddKeysResponse_init_zero             {MessageHeader_init_zero, false, {0, {0}}, false, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define MessageHeader_category_tag               1
#define MessageHeader_type_tag                   2
#define MessageHeader_error_tag                  3
#define GetHddKeysRequest_header_tag             1
#define GetHddKeysResponse_header_tag            1
#define GetHddKeysResponse_encrypted_tag         2
#define GetHddKeysResponse_key_tag               3

/* Struct field encoding specification for nanopb */
extern const pb_field_t MessageHeader_fields[4];
extern const pb_field_t GetHddKeysRequest_fields[2];
extern const pb_field_t GetHddKeysResponse_fields[4];

/* Maximum encoded size of messages (where known) */
#define MessageHeader_size                       19
#define GetHddKeysRequest_size                   21
#define GetHddKeysResponse_size                  153

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MIRABUILTIN_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Sat Sep 29 20:47:24 2018. */

#ifndef PB_MIRABUILTIN_PB_H_INCLUDED
#define PB_MIRABUILTIN_PB_H_INCLUDED
#include <nanopb/pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _UtilsDumpHddKeysRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:UtilsDumpHddKeysRequest) */
} UtilsDumpHddKeysRequest;

typedef struct _UtilsDumpHddKeysResponse {
    int32_t error;
    pb_callback_t encrypted;
    pb_callback_t key;
/* @@protoc_insertion_point(struct:UtilsDumpHddKeysResponse) */
} UtilsDumpHddKeysResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define UtilsDumpHddKeysRequest_init_default     {0}
#define UtilsDumpHddKeysResponse_init_default    {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define UtilsDumpHddKeysRequest_init_zero        {0}
#define UtilsDumpHddKeysResponse_init_zero       {0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define UtilsDumpHddKeysResponse_error_tag       1
#define UtilsDumpHddKeysResponse_encrypted_tag   2
#define UtilsDumpHddKeysResponse_key_tag         3

/* Struct field encoding specification for nanopb */
extern const pb_field_t UtilsDumpHddKeysRequest_fields[1];
extern const pb_field_t UtilsDumpHddKeysResponse_fields[4];

/* Maximum encoded size of messages (where known) */
#define UtilsDumpHddKeysRequest_size             0
/* UtilsDumpHddKeysResponse_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MIRABUILTIN_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

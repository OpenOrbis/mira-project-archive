<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{db146b77-3c14-4680-85ac-50b83292b1a8}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>MiraFW</RootNamespace>
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
    <LinuxProjectType>{2238F9CD-F817-4ECC-BD14-2524D2669B35}</LinuxProjectType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
    <ConfigurationType>Makefile</ConfigurationType>
    <RemoteRootDir>~/mira/Firmware</RemoteRootDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ConfigurationType>Makefile</ConfigurationType>
    <RemoteRootDir>~/mira/Firmware</RemoteRootDir>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <NMakeIncludeSearchPath>$(SolutionDir)Firmware\Dependencies\oni-framework\include;$(SolutionDir)Firmware\Dependencies\oni-framework\include\nanopb;$(ProjectDir)src;$(ProjectDir)src\flatbuffers;$(SolutionDir)Firmware\Dependencies\freebsd-headers\include;$(SolutionDir)Firmware\Dependencies\hde</NMakeIncludeSearchPath>
    <NMakePreprocessorDefinitions>_KERNEL;ONI_PLATFORM=ONI_PLATFORM_ORBIS_BSD_501;__LP64__=1;_M_X64;__amd64__;_STANDALONE;_STANDALONE_DEBUG;FLATCC_PORTABLE;FLATCC_NO_PALIGNED_ALLOC</NMakePreprocessorDefinitions>
    <AdditionalSourcesToCopyMapping>Makefile;$(AdditionalSourcesToCopyMapping)</AdditionalSourcesToCopyMapping>
    <RemoteBuildCommandLine>cd $(RemoteProjectDir);make create;scan-build make ONI_PLATFORM=ONI_PLATFORM_ORBIS_BSD_501</RemoteBuildCommandLine>
    <RemoteReBuildCommandLine>cd $(RemoteProjectDir);make create;scan-build make clean;make ONI_PLATFORM=ONI_PLATFORM_ORBIS_BSD_501</RemoteReBuildCommandLine>
    <RemoteCleanCommandLine>cd $(RemoteProjectDir);make create;scan-build make clean</RemoteCleanCommandLine>
    <RemoteBuildOutputs>MiraFW_Orbis_ONI_PLATFORM_ORBIS_BSD_501.elf</RemoteBuildOutputs>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <NMakeIncludeSearchPath>$(SolutionDir)Firmware\Dependencies\oni-framework\include;$(SolutionDir)Firmware\Dependencies\oni-framework\include\nanopb;$(ProjectDir)src;$(SolutionDir)Firmware\Dependencies\freebsd-headers\include;$(SolutionDir)Firmware\Dependencies\hde</NMakeIncludeSearchPath>
    <NMakePreprocessorDefinitions>_KERNEL;ONI_PLATFORM=ONI_PLATFORM_ORBIS_BSD_501;__LP64__=1;_M_X64;__amd64__;PB_FIELD_16BIT;_STANDALONE</NMakePreprocessorDefinitions>
    <AdditionalSourcesToCopyMapping>Makefile;$(AdditionalSourcesToCopyMapping)</AdditionalSourcesToCopyMapping>
    <RemoteBuildCommandLine>cd $(RemoteProjectDir);make create;scan-build make ONI_PLATFORM=ONI_PLATFORM_ORBIS_BSD_501</RemoteBuildCommandLine>
    <RemoteReBuildCommandLine>cd $(RemoteProjectDir);make create;scan-build make clean;make ONI_PLATFORM=ONI_PLATFORM_ORBIS_BSD_501</RemoteReBuildCommandLine>
    <RemoteCleanCommandLine>cd $(RemoteProjectDir);make create;scan-build make clean</RemoteCleanCommandLine>
    <RemoteBuildOutputs>MiraFW_Orbis_ONI_PLATFORM_ORBIS_BSD_501.elf</RemoteBuildOutputs>
  </PropertyGroup>
  <ItemGroup>
    <Text Include="Makefile" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\entrypoint.c" />
    <ClCompile Include="src\flatbuffers\builder.c" />
    <ClCompile Include="src\flatbuffers\emitter.c" />
    <ClCompile Include="src\flatbuffers\isinf.c" />
    <ClCompile Include="src\flatbuffers\json_parser.c" />
    <ClCompile Include="src\flatbuffers\json_printer.c" />
    <ClCompile Include="src\flatbuffers\refmap.c" />
    <ClCompile Include="src\flatbuffers\verifier.c" />
    <ClCompile Include="src\mira\fs\overlay\overlayfs.c" />
    <ClCompile Include="src\mira\miraframework.c" />
    <ClCompile Include="src\mira\plugins\appInstaller\appinstaller_plugin.c" />
    <ClCompile Include="src\mira\plugins\appInstaller\appinstaller_utils.c" />
    <ClCompile Include="src\mira\plugins\debugger\debugger_breakpoints.c" />
    <ClCompile Include="src\mira\plugins\debugger\debugger_callbacks.c" />
    <ClCompile Include="src\mira\plugins\debugger\debugger_plugin.c" />
    <ClCompile Include="src\mira\plugins\fileexplorer\fileexplorer_plugin.c" />
    <ClCompile Include="src\mira\plugins\hen\henplugin.c" />
    <ClCompile Include="src\mira\plugins\hen\henplugin_pkg.c" />
    <ClCompile Include="src\mira\plugins\logserver\logserver_plugin.c" />
    <ClCompile Include="src\mira\plugins\orbisutils\orbisutils_plugin.c" />
    <ClCompile Include="src\mira\plugins\pluginloader.c" />
    <ClCompile Include="src\mira\utils\elfutils.c" />
    <ClCompile Include="src\mira\utils\flat_vector.c" />
    <ClCompile Include="src\mira\utils\ini\ini.c" />
    <ClCompile Include="src\mira\utils\injector.c" />
    <ClCompile Include="src\mira\utils\vector.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\flatbuffers\flatcc\flatcc.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_accessors.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_alloc.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_builder.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_emitter.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_endian.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_epilogue.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_flatbuffers.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_identifier.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_iov.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_json_parser.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_json_printer.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_portable.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_prologue.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_refmap.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_rtconfig.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_types.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_unaligned.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_verifier.h" />
    <ClInclude Include="src\flatbuffers\flatcc\flatcc_version.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\grisu3_math.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\grisu3_parse.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\grisu3_print.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\include\linux\endian.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\include\std\inttypes.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\include\std\stdalign.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\include\std\stdbool.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\include\std\stdint.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\paligned_alloc.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pbase64.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pdiagnostic.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pdiagnostic_pop.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pdiagnostic_push.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pendian.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pendian_detect.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pinline.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pinttypes.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\portable.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\portable_basic.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pparsefp.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pparseint.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pprintfp.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pprintint.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pstatic_assert.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pstatic_assert_scope.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pstdalign.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pstdbool.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pstdint.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\punaligned.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pversion.h" />
    <ClInclude Include="src\flatbuffers\flatcc\portable\pwarnings.h" />
    <ClInclude Include="src\flatbuffers\flatcc\reflection\flatbuffers_common_builder.h" />
    <ClInclude Include="src\flatbuffers\flatcc\reflection\flatbuffers_common_reader.h" />
    <ClInclude Include="src\flatbuffers\flatcc\reflection\reflection_builder.h" />
    <ClInclude Include="src\flatbuffers\flatcc\reflection\reflection_reader.h" />
    <ClInclude Include="src\flatbuffers\flatcc\reflection\reflection_verifier.h" />
    <ClInclude Include="src\flatbuffers\fpmath.h" />
    <ClInclude Include="src\flatbuffers\_fpmath.h" />
    <ClInclude Include="src\mira\fs\fuse\netfs.h" />
    <ClInclude Include="src\mira\fs\overlay\overlayfs.h" />
    <ClInclude Include="src\mira\miraframework.h" />
    <ClInclude Include="src\mira\plugins\appInstaller\appinstaller_plugin.h" />
    <ClInclude Include="src\mira\plugins\debugger\debugger_plugin.h" />
    <ClInclude Include="src\mira\plugins\fileexplorer\fileexplorer_plugin.h" />
    <ClInclude Include="src\mira\plugins\hen\henplugin.h" />
    <ClInclude Include="src\mira\plugins\hen\henplugin_pkg.h" />
    <ClInclude Include="src\mira\plugins\logserver\logserver_plugin.h" />
    <ClInclude Include="src\mira\plugins\orbisutils\orbisutils_plugin.h" />
    <ClInclude Include="src\mira\plugins\pluginloader.h" />
    <ClInclude Include="src\mira\trainers\trainermanager.h" />
    <ClInclude Include="src\mira\utils\elfutils.h" />
    <ClInclude Include="src\mira\utils\flat_vector.h" />
    <ClInclude Include="src\mira\utils\ini\ini.h" />
    <ClInclude Include="src\mira\utils\injector.h" />
    <ClInclude Include="src\mira\utils\miraelf.h" />
    <ClInclude Include="src\mira\utils\vector.h" />
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <PreBuildEvent>
      <AdditionalSourcesToCopyMapping>
      </AdditionalSourcesToCopyMapping>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>
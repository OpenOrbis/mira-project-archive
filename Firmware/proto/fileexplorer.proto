syntax = "proto3";

// To build this file:
// protoc -I=. --c_out=. ./<filename>.proto
// NOTE: Will need https://github.com/protobuf-c/protobuf-c/pull/342
// Currently compile from source with above fix, and you gucci

enum FileTransferCommands {
	Echo = 0;
	Open = 1;
	Close = 2;
	GetDents = 3;
	Read = 4;
	Write = 5;
	Unlink = 6;
	Move = 7;
	Stat = 8;
	MkDir = 9;
	RmDir = 10;
}

message DirEnt {
    enum DirectoryType {
        DT_UNKNOWN = 0;
        DT_FIFO = 1;
        DT_CHR = 2;
        DT_DIR = 4;
        DT_BLK = 6;
        DT_REG = 8;
        DT_LNK = 10;
        DT_SOCK = 12;
        DT_WHT = 14;
    }
    uint32 fileno = 1;
    uint32 reclen = 2;
    DirectoryType type = 3;
    string name = 4;
}

// echo
message EchoRequest {
	string message = 1;
}

message EchoResponse {
	int32 error = 1;
}

// open
message OpenRequest {
    string path = 1;
    int32 flags = 2;
    int32 mode = 3;
}

message OpenResponse {
    int32 error = 1;

	int32 handle = 2;
}

// close
message CloseRequest {
    // Handle of the file to close
    int32 handle = 1;
}

message CloseResponse {
    int32 error = 1;
}

// read
message ReadRequest {
    int32 handle = 1;

    uint64 offset = 2;

    uint64 size = 3;
}

message ReadResponse {
    int32 error = 1;

	bytes data = 2;
}

// write
message WriteRequest {
	int32 handle = 1;

	uint64 offset = 2;

	bytes data = 3;
}

message WriteResponse {
	int32 error = 1;
}

// mkdir
message MakeDirectoryRequest {
    string path = 1;

    int32 mode = 2;
}

message MakeDirectoryResponse {
    int32 error = 1;
}

// rmdir
message RemoveDirectoryRequest {
	// Path to remove
    string path = 1;

	// Recursively delete all files + folders in this directory
	int32 recursive = 2; 
}

message RemoveDirectoryResponse {
    int32 error = 1;
}

// unlink
message UnlinkRequest {
    string path = 1;
}

message UnlinkResponse {
    int32 error = 1;
}

// stats
message TimeSpec {
    int64 sec = 1;
    uint64 nsec = 2;
}

message StatRequest {
	// Will allow to stat a handle, if -1 then will use path
	int32 handle = 1;

    string path = 2;
}

message StatResponse {
    int32 error = 1;

    string path = 2;

    // device
    uint32 dev = 3;

    // inode
    uint32 ino = 4;

    // protection mode, uint16
    uint32 mode = 5;

    // number of hard links, uint16
    uint32 nlink = 6;

    // user id
    uint32 uid = 7;

    // group id
    uint32 gid = 8;

    // device type
    uint32 rdev = 9;

    // time of last access
    TimeSpec atim = 10;
    
    // time of last modification
    TimeSpec mtim = 11;

    // time of last file status change
    TimeSpec ctim = 12;

    // file size, in blocks
    int64 size = 13;

    // blocks allocated for file
    int64 blocks = 14;

    // optimal blocksize for i/o
    uint32 blksize = 15;

    // user defined flags
    uint32 flags = 16;

    // file generation number
    uint32 gen = 17;

    int32 lspare = 18;

    // time of creation
   TimeSpec birthtim = 19;
}

// getdents
message GetDentsRequest {
    string path = 2;
}

message GetDentsResponse {
    int32 error = 1;

    repeated DirEnt entries = 2;
}